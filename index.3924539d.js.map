{"mappings":"ACEA,IAAM,EAAY,SAAS,aAAa,CAAC,eACnC,EAAY,SAAS,aAAa,CAAC,eACnC,EAAe,SAAS,aAAa,CAAC,kBACtC,EAAe,SAAS,aAAa,CAAC,kBACtC,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAY,EAAM,aAAa,CAAC,SAItC,EAAU,gBAAgB,CAAC,QAAS,WAClC,EAAU,QAAQ,CAAG,CAAA,EAErB,IAAM,EAAgB,EAAM,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAC5C,EAAkB,EAAM,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CACvD,EAAK,SAAS,aAAa,CAAC,MAMlC,GAJ8B,IAA1B,EAAU,IAAI,CAAC,MAAM,EACvB,CAAA,EAAU,QAAQ,CAAG,CAAA,CADvB,GAII,CAAA,GAbe,EAaE,GAGnB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAiB,IAAK,CACxC,IAAM,EAAK,SAAS,aAAa,CAAC,MAElC,EAAG,WAAW,CAAC,EACjB,CAGF,EAAU,WAAW,CAAC,GACxB,GAEA,EAAa,gBAAgB,CAAC,QAAS,WACrC,EAAa,QAAQ,CAAG,CAAA,EAExB,IAAM,EAAkB,EAAM,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAM7D,GAJwB,IAApB,GACF,CAAA,EAAa,QAAQ,CAAG,CAAA,CAD1B,EAII,GAnCe,QAoCZ,CACL,IAAM,EAAM,SAAS,gBAAgB,CAAC,YAEjC,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAY,CAAA,CAAA,OAAA,QAAA,CAAA,GAAZ,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAAiB,CAAjB,IAAM,EAAN,EAAA,KAAA,CACG,EAAK,SAAS,aAAa,CAAC,MAElC,EAAG,WAAW,CAAC,EACjB,C,C,M,E,CAJK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAKP,CACF,GAEA,EAAU,gBAAgB,CAAC,QAAS,WAClC,EAAU,QAAQ,CAAG,CAAA,EACrB,EAAU,SAAS,CAAC,IAEhB,EAAU,IAAI,CAAC,MAAM,EApDN,GAqDjB,CAAA,EAAU,QAAQ,CAAG,CAAA,CADvB,CAGF,GAEA,EAAa,gBAAgB,CAAC,QAAS,WACrC,EAAa,QAAQ,CAAG,CAAA,EAExB,IAAM,EAAiB,EAAM,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CACtD,EAAM,EAAU,IAAI,CAEtB,GAAkB,GACpB,CAAA,EAAa,QAAQ,CAAG,CAAA,CAD1B,EAIA,IAAK,IAAI,EAAI,EAAG,EAAI,EAAI,MAAM,CAAE,IAC9B,CAAG,CAAC,EAAE,CAAC,UAAU,CAAC,GAEtB","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar appendRow = document.querySelector(\".append-row\");\nvar removeRow = document.querySelector(\".remove-row\");\nvar appendColumn = document.querySelector(\".append-column\");\nvar removeColumn = document.querySelector(\".remove-column\");\nvar table = document.querySelector(\"table\");\nvar tableBody = table.querySelector(\"tbody\");\nvar minCellCount = 2;\nvar maxCellCount = 10;\nappendRow.addEventListener(\"click\", function() {\n    removeRow.disabled = false;\n    var tbodyRowCount = table.tBodies[0].rows.length;\n    var tbodyCellsCount = table.tBodies[0].rows[0].cells.length;\n    var tr = document.createElement(\"tr\");\n    if (tableBody.rows.length === maxCellCount - 1) appendRow.disabled = true;\n    if (tbodyRowCount >= maxCellCount) return;\n    else for(var i = 0; i < tbodyCellsCount; i++){\n        var td = document.createElement(\"td\");\n        tr.appendChild(td);\n    }\n    tableBody.appendChild(tr);\n});\nappendColumn.addEventListener(\"click\", function() {\n    removeColumn.disabled = false;\n    var columnCellCount = table.tBodies[0].rows[0].cells.length;\n    if (columnCellCount === maxCellCount - 1) appendColumn.disabled = true;\n    if (columnCellCount >= maxCellCount) ;\n    else {\n        var trs = document.querySelectorAll(\"table tr\");\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = trs[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var tr = _step.value;\n                var td = document.createElement(\"td\");\n                tr.appendChild(td);\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n    }\n});\nremoveRow.addEventListener(\"click\", function() {\n    appendRow.disabled = false;\n    tableBody.deleteRow(-1);\n    if (tableBody.rows.length <= minCellCount) removeRow.disabled = true;\n});\nremoveColumn.addEventListener(\"click\", function() {\n    appendColumn.disabled = false;\n    var tbodyCellCount = table.tBodies[0].rows[0].cells.length;\n    var row = tableBody.rows;\n    if (tbodyCellCount <= minCellCount + 1) removeColumn.disabled = true;\n    for(var i = 0; i < row.length; i++)row[i].deleteCell(-1);\n});\n\n//# sourceMappingURL=index.3924539d.js.map\n","'use strict';\n\nconst appendRow = document.querySelector('.append-row');\nconst removeRow = document.querySelector('.remove-row');\nconst appendColumn = document.querySelector('.append-column');\nconst removeColumn = document.querySelector('.remove-column');\nconst table = document.querySelector('table');\nconst tableBody = table.querySelector('tbody');\nconst minCellCount = 2;\nconst maxCellCount = 10;\n\nappendRow.addEventListener('click', () => {\n  removeRow.disabled = false;\n\n  const tbodyRowCount = table.tBodies[0].rows.length;\n  const tbodyCellsCount = table.tBodies[0].rows[0].cells.length;\n  const tr = document.createElement('tr');\n\n  if (tableBody.rows.length === maxCellCount - 1) {\n    appendRow.disabled = true;\n  }\n\n  if (tbodyRowCount >= maxCellCount) {\n    return;\n  } else {\n    for (let i = 0; i < tbodyCellsCount; i++) {\n      const td = document.createElement('td');\n\n      tr.appendChild(td);\n    }\n  }\n\n  tableBody.appendChild(tr);\n});\n\nappendColumn.addEventListener('click', () => {\n  removeColumn.disabled = false;\n\n  const columnCellCount = table.tBodies[0].rows[0].cells.length;\n\n  if (columnCellCount === maxCellCount - 1) {\n    appendColumn.disabled = true;\n  }\n\n  if (columnCellCount >= maxCellCount) {\n  } else {\n    const trs = document.querySelectorAll('table tr');\n\n    for (const tr of trs) {\n      const td = document.createElement('td');\n\n      tr.appendChild(td);\n    }\n  }\n});\n\nremoveRow.addEventListener('click', () => {\n  appendRow.disabled = false;\n  tableBody.deleteRow(-1);\n\n  if (tableBody.rows.length <= minCellCount) {\n    removeRow.disabled = true;\n  }\n});\n\nremoveColumn.addEventListener('click', () => {\n  appendColumn.disabled = false;\n\n  const tbodyCellCount = table.tBodies[0].rows[0].cells.length;\n  const row = tableBody.rows;\n\n  if (tbodyCellCount <= minCellCount + 1) {\n    removeColumn.disabled = true;\n  }\n\n  for (let i = 0; i < row.length; i++) {\n    row[i].deleteCell(-1);\n  }\n});\n"],"names":["appendRow","document","querySelector","removeRow","appendColumn","removeColumn","table","tableBody","addEventListener","disabled","tbodyRowCount","tBodies","rows","length","tbodyCellsCount","cells","tr","createElement","maxCellCount","i","td","appendChild","columnCellCount","trs","querySelectorAll","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","err","return","deleteRow","tbodyCellCount","row","minCellCount","deleteCell"],"version":3,"file":"index.3924539d.js.map"}